---
import { useTranslate } from '@utils/i18n/useTranslate'
import { Moon, Sun, Monitor } from 'lucide-react'
import Select from '@components/Select.astro'
import type { Locale } from '@utils/i18n/locales'

type Props = {
  locale: Locale
}

const t = useTranslate(Astro.props.locale)
---

<Select
  data-theme-select
  aria-label={t['ChooseATheme']}
  style={{ '--select-padding': '32px' }}
>
  <option value='light'>{t['Light']}</option>
  <option value='dark'>{t['Dark']}</option>
  <option value='system'>{t['System']}</option>

  <svg
    slot='start-icon'
    class='feather'
    viewBox='0 0 24 24'
    width='24'
    height='24'
  >
    <title>{t['ThemeIcon']}</title>

    <defs>
      <Moon id='moon' />
      <Sun id='sun' />
      <Monitor id='monitor' />
    </defs>

    <use data-theme-select-icon href='#monitor'></use>
  </svg>
</Select>

<script>
  const themeSelects = document.querySelectorAll<HTMLSelectElement>(
    '[data-theme-select]'
  )

  themeSelects?.forEach((themeSelect) => {
    const storedThemeChoice = window.localStorage.getItem('__theme') ?? 'system'
    changeThemeSelectIcon(storedThemeChoice as ThemeChoice)

    const themeChoiceOption = Array.from(themeSelect.options).find(
      (option) => option.value === storedThemeChoice
    )
    if (themeChoiceOption) {
      themeChoiceOption.setAttribute('selected', '')
    }

    themeSelect.addEventListener('change', function (e) {
      if (!e.target) {
        return
      }

      const selectedOption = (e.target as HTMLSelectElement).selectedOptions[0]
      if (selectedOption) {
        window.__setTheme(selectedOption.value as ThemeChoice)
      }
    })
  })

  document.body.addEventListener('newTheme', function (e: NewThemeEvent) {
    const themeChoice = e.detail.themeChoice

    changeThemeSelectIcon(themeChoice)
  } as EventListener)

  function changeThemeSelectIcon(themeChoice: ThemeChoice) {
    const icon = {
      dark: '#moon',
      light: '#sun',
      system: '#monitor',
    }[themeChoice]

    themeSelects.forEach((themeSelect) => {
      themeSelect.parentElement
        ?.querySelector<HTMLElement>('[data-theme-select-icon]')
        ?.setAttribute('href', icon)
    })
  }
</script>
