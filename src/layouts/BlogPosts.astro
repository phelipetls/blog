---
import BlogPostCard from '@components/BlogPostCard.astro'
import IconButton from '@components/IconButton'
import RssButton from '@components/RssButton.astro'
import Site from '@layouts/Site.astro'
import { ChevronDown, ChevronUp } from 'lucide-react'
import { useTranslate } from '@utils/i18n/useTranslate'
import { format } from 'date-fns'
import _ from 'lodash'
import type { CollectionEntry } from 'astro:content'
import type { Locale } from '@utils/i18n/locales'
import { getRelativeLocaleUrl } from 'astro/virtual-modules/i18n.js'

type Props = {
  locale: Locale
  blogPosts: CollectionEntry<'posts'>[]
}

const { locale, blogPosts } = Astro.props

const blogPostsGroupedByYear = _.groupBy(blogPosts, (blogPost) => {
  return format(blogPost.data.date, 'yyyy')
})

const years = Object.keys(blogPostsGroupedByYear).sort(
  (yearA, yearB) => Number(yearB) - Number(yearA)
)

const t = useTranslate(locale)

const rssUrl = getRelativeLocaleUrl(locale, '/posts/index.xml')
---

<Site
  locale={locale}
  title='Posts'
  isTranslated
  description={t['PostsListDescription']}
  seo={{
    extend: {
      link: [
        {
          rel: 'alternate',
          type: 'application/rss+xml',
          href: rssUrl,
        },
      ],
    },
  }}
  htmlClass='scroll-smooth scroll-pt-[var(--nav-height)] sm:scroll-pt-0'
>
  <main class='grid grid-cols-layout'>
    <div class='sm:mb-8 hidden sm:gap-2 sm:flex sm:items-end'>
      <h1 class='m-0'>Posts</h1>
      <RssButton locale={locale} />
    </div>

    <div>
      {
        years.map((year, index) => {
          const prevYear: string | null = years[index - 1] ?? null
          const nextYear: string | null = years[index + 1] ?? null

          const blogPostsFromThatYear = blogPostsGroupedByYear[year]
          if (!blogPostsFromThatYear) {
            return
          }

          return (
            <div class='group'>
              <div class='sr-only' id={year} />

              <div
                class:list={[
                  'sticky',
                  'top-[calc(var(--nav-height)_+_0.5rem)]',
                  'w-full',
                  'bg-background/90',
                  'backdrop-blur-sm',
                  'py-2',
                  'sm:top-0',
                  'max-w-2xl',
                ]}
              >
                <div class='flex flex-row justify-between'>
                  <h2 class='m-0 text-2xl'>
                    <time datetime={`${year}-01-01`}>{year}</time>
                  </h2>

                  <div class='flex flex-row gap-2'>
                    <IconButton
                      href={`#${prevYear}`}
                      variant='rounded-full'
                      disabled={prevYear === null}
                      aria-label={t['PreviousYear']}
                    >
                      <ChevronUp />
                    </IconButton>

                    <IconButton
                      href={`#${nextYear}`}
                      variant='rounded-full'
                      disabled={nextYear === null}
                      aria-label={t['NextYear']}
                    >
                      <ChevronDown />
                    </IconButton>
                  </div>
                </div>
              </div>

              <ul class='m-0 mt-8 grid w-full list-none grid-cols-1 gap-4 pb-24 group-last:pb-0'>
                {blogPostsFromThatYear
                  .sort((blogPostA, blogPostB) => {
                    return (
                      new Date(blogPostB.data.date).getTime() -
                      new Date(blogPostA.data.date).getTime()
                    )
                  })
                  .map((blogPost) => {
                    return (
                      <>
                        <li class='mb-8 last:mb-0'>
                          <BlogPostCard locale={locale} blogPost={blogPost} />
                        </li>
                      </>
                    )
                  })}
              </ul>
            </div>
          )
        })
      }
    </div>
  </main>

  <div
    slot='mobile-nav-title'
    class='flex flex-row items-center gap-1 [&_a]:bg-transparent'
  >
    Posts

    <RssButton locale={locale} />
  </div>
</Site>
