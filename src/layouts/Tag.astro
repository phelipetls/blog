---
import Site from '@layouts/Site.astro'
import { useTranslate } from '@utils/i18n/useTranslate'
import { getBlogPostFolderName } from '@utils/posts/getBlogPostFolderName'
import type { CollectionEntry } from 'astro:content'
import { getRelativeLocaleUrl } from 'astro:i18n'
import { format } from 'date-fns'
import _ from 'lodash'
import type { Locale } from '@utils/i18n/locales'

type Props = {
  tag: string
  blogPosts: CollectionEntry<'posts'>[]
  isTranslated: boolean
  locale: Locale
}

const { tag, blogPosts, isTranslated, locale } = Astro.props

const blogPostsGroupedByYear = _.groupBy(blogPosts, (blogPost) => {
  return format(blogPost.data.date, 'yyyy')
})

const years = Object.keys(blogPostsGroupedByYear).sort(
  (yearA, yearB) => Number(yearB) - Number(yearA)
)

const t = useTranslate(locale)
---

<Site
  locale={locale}
  isTranslated={isTranslated}
  title={t.BlogPostsTaggedWith(tag)}
  description={t.TagDescription({
    count: blogPosts.length,
    tag,
  })}
>
  <main class='grid grid-cols-layout'>
    <h1 class='text-base m-0'>
      {t.BlogPostsTaggedWith(tag)} ({blogPosts.length})
    </h1>

    <ul class='list-none ml-0 mt-8'>
      {
        years.map((year) => {
          const blogPostsFromThatYear = blogPostsGroupedByYear[year]
          if (!blogPostsFromThatYear) {
            return
          }

          return (
            <>
              <h2 class='m-0 mb-2 mt-8 tabular-nums first:mt-0'>{year}</h2>

              {blogPostsFromThatYear
                .sort(
                  (blogPostA, blogPostB) =>
                    blogPostB.data.date.getTime() -
                    blogPostA.data.date.getTime()
                )
                .map((blogPost) => {
                  return (
                    <li class='group'>
                      <a
                        class='flex flex-nowrap items-start gap-4'
                        href={getRelativeLocaleUrl(
                          locale,
                          `/posts/${getBlogPostFolderName(blogPost)}`
                        )}
                      >
                        <div class='flex min-w-[6ch] basis-2'>
                          <time class='whitespace-nowrap tabular-nums'>
                            {format(blogPost.data.date, 'MMM dd')}
                          </time>
                        </div>

                        <h2 class='m-0 border-l border-primary pb-2 pl-4 text-base font-normal transition-colors duration-300 group-last:pb-0 sm:hover:text-primary'>
                          {blogPost.data.title}
                        </h2>
                      </a>
                    </li>
                  )
                })}
            </>
          )
        })
      }
    </ul>
  </main>
</Site>
