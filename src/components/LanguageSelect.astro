---
import { useTranslate } from '@utils/i18n/useTranslate'
import { Languages } from 'lucide-react'
import Select from '@components/Select.astro'
import type { Locale } from '@utils/i18n/locales'

type Props = {
  locale: Locale
}

const { locale, ...rest } = Astro.props
const t = useTranslate(locale)
---

<Select
  data-language-select
  aria-label={t['ChooseALanguage']}
  variant='ghost'
  {...rest}
>
  <option selected={Astro.props.locale === 'en'} value='en'>English</option>
  <option selected={Astro.props.locale === 'pt'} value='pt'>PortuguÃªs</option>

  <Languages slot={'start-icon'} />
</Select>

<script>
  const selects = document.querySelectorAll<HTMLSelectElement>(
    '[data-language-select]',
  )

  selects?.forEach((select) => {
    select.addEventListener('change', function () {
      window.location.href = toggleLanguageInUrl()
    })
  })

  function toggleLanguageInUrl() {
    const pathname = window.location.pathname
    let newUrl = pathname

    switch (pathname) {
      case '/pt':
        newUrl = '/'
        break
      case '/':
        newUrl = '/pt/'
        break
      default:
        if (pathname.startsWith('/pt/')) {
          newUrl = pathname.replace('/pt/', '/')
        } else {
          newUrl = '/pt' + pathname
        }
        break
    }

    return newUrl
  }
</script>
